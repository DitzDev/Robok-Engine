name: Android CI

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/android.yml
      - app/**
      - easy-ui/**
      - feature/**
      - feature-compose/**
      - core/**
      - core-compose/**
      - app-strings/**
      - robok/**
      - gradle/**
      - build.gradle.kts
      - gradle.properties
      - gradlew
      - gradlew.bat
      - settings.gradle.kts
  pull_request:
    paths:
      - .github/workflows/android.yml
      - app/**
      - easy-ui/**
      - feature/**
      - feature-compose/**
      - core/**
      - core-compose/**
      - app-strings/**
      - robok/**
      - gradle/**
      - build.gradle.kts
      - gradle.properties
      - gradlew
      - gradlew.bat
      - settings.gradle.kts

jobs:
  engine-debug-apk:
    name: Build Engine Debug APK
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'oracle'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: Build with Gradle
        id: gradle_build_debug
        run: ./gradlew assembleDebug

      - name: Upload debug apk
        uses: actions/upload-artifact@v4
        with:
          name: engine-debug
          compression-level: 0
          path: app/build/outputs/apk/debug/app-debug.apk
  
  send-debug-to-telegram:
    name: Send Debug APK to Telegram
    runs-on: ubuntu-latest
    needs: engine-debug-apk
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon
      
      - name: Download Debug APK
        uses: actions/download-artifact@v4
        with:
          name: engine-debug
          
      - name: List all files in repo
        run: ls
          
      - name: Get git commit info
        id: gh_info
        run: |
            echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
            echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
            
      - name: Rename debug apk file 
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk robok-engine-debug(${{ env.BRANCH_NAME }}@${{ env.COMMIT_MESSAGE }}).apk
          ls 
          
      - name: Send APK to Telegram
        env:
          API_ID: ${{ secrets.TELEGRAM_APP_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_APP_API_HASH }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_RBKINC_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_RBKINC_CHAT_ID }}
          APK_TO_SEND: robok-engine-debug(${{ env.BRANCH_NAME }}@${{ env.COMMIT_MESSAGE }}).apk
          TOPIC_ID: 1029
          DESCRIPTION: |
            **${{ github.actor }}** committed to [${{ github.repository }}](https://github.com/${{ github.repository }})

            Branch: **${{ env.BRANCH_NAME }}**
            Commit message: `${{ env.COMMIT_MESSAGE }}`
        run: python .github/telegram/send_apk.py
        continue-on-error: true

  engine-release-apk:
    name: Build Engine Release APK
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'oracle'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: Build with Gradle
        id: gradle_build_release
        run: ./gradlew assembleRelease
      
      - name: Upload mapping
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: engine-release-mapping
          compression-level: 0
          path: app/build/outputs/mapping/release/
             
      - name: Sign APK
        id: sign_apk
        uses: noriban/sign-android-release@v5
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"     
        continue-on-error: true 

      - name: Upload release apk
        uses: actions/upload-artifact@v4
        with:
          name: engine-release
          compression-level: 0
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}
          
  send-release-to-telegram:
    name: Send Release APK to Telegram
    runs-on: ubuntu-latest
    needs: engine-release-apk
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon
      
      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: engine-release
          
      - name: List all files in repo
        run: ls
      
      - name: Get git commit info
        id: gh_info
        run: |
            echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
            echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
            
      - name: Rename release apk file 
        run: |
          mv app/build/outputs/apk/release/app-release-unsigned-signed.apk robok-engine-release(${{ env.BRANCH_NAME }}@${{ env.COMMIT_MESSAGE }}).apk
          ls 
          
      - name: Send APK to Telegram
        env:
          API_ID: ${{ secrets.TELEGRAM_APP_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_APP_API_HASH }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_RBKINC_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_RBKINC_CHAT_ID }}
          APK_TO_SEND: robok-engine-release(${{ env.BRANCH_NAME }}@${{ env.COMMIT_MESSAGE }}).apk
          TOPIC_ID: 1029
          DESCRIPTION: |
            **${{ github.actor }}** committed to [${{ github.repository }}](https://github.com/${{ github.repository }})

            Branch: **${{ env.BRANCH_NAME }}**
            Commit message: `${{ env.COMMIT_MESSAGE }}`
        run: python .github/telegram/send_apk.py
        continue-on-error: true