package org.robok.engine.ui.theme

/*
 *  This file is part of Robok Â© 2024.
 *
 *  Robok is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Robok is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *   along with Robok.  If not, see <https://www.gnu.org/licenses/>.
 */

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

internal val primaryLight = Color(0xFF4C662B)
internal val onPrimaryLight = Color(0xFFFFFFFF)
internal val primaryContainerLight = Color(0xFFCDEDA3)
internal val onPrimaryContainerLight = Color(0xFF354E16)
internal val secondaryLight = Color(0xFF586249)
internal val onSecondaryLight = Color(0xFFFFFFFF)
internal val secondaryContainerLight = Color(0xFFDCE7C8)
internal val onSecondaryContainerLight = Color(0xFF404A33)
internal val tertiaryLight = Color(0xFF386663)
internal val onTertiaryLight = Color(0xFFFFFFFF)
internal val tertiaryContainerLight = Color(0xFFBCECE7)
internal val onTertiaryContainerLight = Color(0xFF1F4E4B)
internal val errorLight = Color(0xFFBA1A1A)
internal val onErrorLight = Color(0xFFFFFFFF)
internal val errorContainerLight = Color(0xFFFFDAD6)
internal val onErrorContainerLight = Color(0xFF93000A)
internal val backgroundLight = Color(0xFFF9FAEF)
internal val onBackgroundLight = Color(0xFF1A1C16)
internal val surfaceLight = Color(0xFFF9FAEF)
internal val onSurfaceLight = Color(0xFF1A1C16)
internal val surfaceVariantLight = Color(0xFFE1E4D5)
internal val onSurfaceVariantLight = Color(0xFF44483D)
internal val outlineLight = Color(0xFF75796C)
internal val outlineVariantLight = Color(0xFFC5C8BA)
internal val scrimLight = Color(0xFF000000)
internal val inverseSurfaceLight = Color(0xFF2F312A)
internal val inverseOnSurfaceLight = Color(0xFFF1F2E6)
internal val inversePrimaryLight = Color(0xFFB1D18A)
internal val surfaceDimLight = Color(0xFFDADBD0)
internal val surfaceBrightLight = Color(0xFFF9FAEF)
internal val surfaceContainerLowestLight = Color(0xFFFFFFFF)
internal val surfaceContainerLowLight = Color(0xFFF3F4E9)
internal val surfaceContainerLight = Color(0xFFEEEFE3)
internal val surfaceContainerHighLight = Color(0xFFE8E9DE)
internal val surfaceContainerHighestLight = Color(0xFFE2E3D8)

internal val primaryLightMediumContrast = Color(0xFF253D05)
internal val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
internal val primaryContainerLightMediumContrast = Color(0xFF5A7539)
internal val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
internal val secondaryLightMediumContrast = Color(0xFF303924)
internal val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
internal val secondaryContainerLightMediumContrast = Color(0xFF667157)
internal val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
internal val tertiaryLightMediumContrast = Color(0xFF083D3A)
internal val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
internal val tertiaryContainerLightMediumContrast = Color(0xFF477572)
internal val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
internal val errorLightMediumContrast = Color(0xFF740006)
internal val onErrorLightMediumContrast = Color(0xFFFFFFFF)
internal val errorContainerLightMediumContrast = Color(0xFFCF2C27)
internal val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
internal val backgroundLightMediumContrast = Color(0xFFF9FAEF)
internal val onBackgroundLightMediumContrast = Color(0xFF1A1C16)
internal val surfaceLightMediumContrast = Color(0xFFF9FAEF)
internal val onSurfaceLightMediumContrast = Color(0xFF0F120C)
internal val surfaceVariantLightMediumContrast = Color(0xFFE1E4D5)
internal val onSurfaceVariantLightMediumContrast = Color(0xFF34382D)
internal val outlineLightMediumContrast = Color(0xFF505449)
internal val outlineVariantLightMediumContrast = Color(0xFF6B6F62)
internal val scrimLightMediumContrast = Color(0xFF000000)
internal val inverseSurfaceLightMediumContrast = Color(0xFF2F312A)
internal val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F2E6)
internal val inversePrimaryLightMediumContrast = Color(0xFFB1D18A)
internal val surfaceDimLightMediumContrast = Color(0xFFC6C7BD)
internal val surfaceBrightLightMediumContrast = Color(0xFFF9FAEF)
internal val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
internal val surfaceContainerLowLightMediumContrast = Color(0xFFF3F4E9)
internal val surfaceContainerLightMediumContrast = Color(0xFFE8E9DE)
internal val surfaceContainerHighLightMediumContrast = Color(0xFFDCDED3)
internal val surfaceContainerHighestLightMediumContrast = Color(0xFFD1D3C8)

internal val primaryLightHighContrast = Color(0xFF1C3200)
internal val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
internal val primaryContainerLightHighContrast = Color(0xFF375018)
internal val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
internal val secondaryLightHighContrast = Color(0xFF262F1A)
internal val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
internal val secondaryContainerLightHighContrast = Color(0xFF434C35)
internal val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
internal val tertiaryLightHighContrast = Color(0xFF003230)
internal val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
internal val tertiaryContainerLightHighContrast = Color(0xFF21504E)
internal val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
internal val errorLightHighContrast = Color(0xFF600004)
internal val onErrorLightHighContrast = Color(0xFFFFFFFF)
internal val errorContainerLightHighContrast = Color(0xFF98000A)
internal val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
internal val backgroundLightHighContrast = Color(0xFFF9FAEF)
internal val onBackgroundLightHighContrast = Color(0xFF1A1C16)
internal val surfaceLightHighContrast = Color(0xFFF9FAEF)
internal val onSurfaceLightHighContrast = Color(0xFF000000)
internal val surfaceVariantLightHighContrast = Color(0xFFE1E4D5)
internal val onSurfaceVariantLightHighContrast = Color(0xFF000000)
internal val outlineLightHighContrast = Color(0xFF2A2D24)
internal val outlineVariantLightHighContrast = Color(0xFF474B40)
internal val scrimLightHighContrast = Color(0xFF000000)
internal val inverseSurfaceLightHighContrast = Color(0xFF2F312A)
internal val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
internal val inversePrimaryLightHighContrast = Color(0xFFB1D18A)
internal val surfaceDimLightHighContrast = Color(0xFFB8BAAF)
internal val surfaceBrightLightHighContrast = Color(0xFFF9FAEF)
internal val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
internal val surfaceContainerLowLightHighContrast = Color(0xFFF1F2E6)
internal val surfaceContainerLightHighContrast = Color(0xFFE2E3D8)
internal val surfaceContainerHighLightHighContrast = Color(0xFFD4D5CA)
internal val surfaceContainerHighestLightHighContrast = Color(0xFFC6C7BD)

internal val primaryDark = Color(0xFFB1D18A)
internal val onPrimaryDark = Color(0xFF1F3701)
internal val primaryContainerDark = Color(0xFF354E16)
internal val onPrimaryContainerDark = Color(0xFFCDEDA3)
internal val secondaryDark = Color(0xFFBFCBAD)
internal val onSecondaryDark = Color(0xFF2A331E)
internal val secondaryContainerDark = Color(0xFF404A33)
internal val onSecondaryContainerDark = Color(0xFFDCE7C8)
internal val tertiaryDark = Color(0xFFA0D0CB)
internal val onTertiaryDark = Color(0xFF003735)
internal val tertiaryContainerDark = Color(0xFF1F4E4B)
internal val onTertiaryContainerDark = Color(0xFFBCECE7)
internal val errorDark = Color(0xFFFFB4AB)
internal val onErrorDark = Color(0xFF690005)
internal val errorContainerDark = Color(0xFF93000A)
internal val onErrorContainerDark = Color(0xFFFFDAD6)
internal val backgroundDark = Color(0xFF12140E)
internal val onBackgroundDark = Color(0xFFE2E3D8)
internal val surfaceDark = Color(0xFF12140E)
internal val onSurfaceDark = Color(0xFFE2E3D8)
internal val surfaceVariantDark = Color(0xFF44483D)
internal val onSurfaceVariantDark = Color(0xFFC5C8BA)
internal val outlineDark = Color(0xFF8F9285)
internal val outlineVariantDark = Color(0xFF44483D)
internal val scrimDark = Color(0xFF000000)
internal val inverseSurfaceDark = Color(0xFFE2E3D8)
internal val inverseOnSurfaceDark = Color(0xFF2F312A)
internal val inversePrimaryDark = Color(0xFF4C662B)
internal val surfaceDimDark = Color(0xFF12140E)
internal val surfaceBrightDark = Color(0xFF383A32)
internal val surfaceContainerLowestDark = Color(0xFF0C0F09)
internal val surfaceContainerLowDark = Color(0xFF1A1C16)
internal val surfaceContainerDark = Color(0xFF1E201A)
internal val surfaceContainerHighDark = Color(0xFF282B24)
internal val surfaceContainerHighestDark = Color(0xFF33362E)

internal val primaryDarkMediumContrast = Color(0xFFC7E79E)
internal val onPrimaryDarkMediumContrast = Color(0xFF172B00)
internal val primaryContainerDarkMediumContrast = Color(0xFF7D9A59)
internal val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
internal val secondaryDarkMediumContrast = Color(0xFFD5E1C2)
internal val onSecondaryDarkMediumContrast = Color(0xFF1F2814)
internal val secondaryContainerDarkMediumContrast = Color(0xFF8A9579)
internal val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
internal val tertiaryDarkMediumContrast = Color(0xFFB5E6E1)
internal val onTertiaryDarkMediumContrast = Color(0xFF002B29)
internal val tertiaryContainerDarkMediumContrast = Color(0xFF6B9995)
internal val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
internal val errorDarkMediumContrast = Color(0xFFFFD2CC)
internal val onErrorDarkMediumContrast = Color(0xFF540003)
internal val errorContainerDarkMediumContrast = Color(0xFFFF5449)
internal val onErrorContainerDarkMediumContrast = Color(0xFF000000)
internal val backgroundDarkMediumContrast = Color(0xFF12140E)
internal val onBackgroundDarkMediumContrast = Color(0xFFE2E3D8)
internal val surfaceDarkMediumContrast = Color(0xFF12140E)
internal val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
internal val surfaceVariantDarkMediumContrast = Color(0xFF44483D)
internal val onSurfaceVariantDarkMediumContrast = Color(0xFFDBDECF)
internal val outlineDarkMediumContrast = Color(0xFFB0B3A6)
internal val outlineVariantDarkMediumContrast = Color(0xFF8E9285)
internal val scrimDarkMediumContrast = Color(0xFF000000)
internal val inverseSurfaceDarkMediumContrast = Color(0xFFE2E3D8)
internal val inverseOnSurfaceDarkMediumContrast = Color(0xFF282B24)
internal val inversePrimaryDarkMediumContrast = Color(0xFF364F17)
internal val surfaceDimDarkMediumContrast = Color(0xFF12140E)
internal val surfaceBrightDarkMediumContrast = Color(0xFF43453D)
internal val surfaceContainerLowestDarkMediumContrast = Color(0xFF060804)
internal val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1E18)
internal val surfaceContainerDarkMediumContrast = Color(0xFF262922)
internal val surfaceContainerHighDarkMediumContrast = Color(0xFF31342C)
internal val surfaceContainerHighestDarkMediumContrast = Color(0xFF3C3F37)

internal val primaryDarkHighContrast = Color(0xFFDAFBB0)
internal val onPrimaryDarkHighContrast = Color(0xFF000000)
internal val primaryContainerDarkHighContrast = Color(0xFFADCD86)
internal val onPrimaryContainerDarkHighContrast = Color(0xFF050E00)
internal val secondaryDarkHighContrast = Color(0xFFE9F4D5)
internal val onSecondaryDarkHighContrast = Color(0xFF000000)
internal val secondaryContainerDarkHighContrast = Color(0xFFBCC7A9)
internal val onSecondaryContainerDarkHighContrast = Color(0xFF060D01)
internal val tertiaryDarkHighContrast = Color(0xFFC9F9F5)
internal val onTertiaryDarkHighContrast = Color(0xFF000000)
internal val tertiaryContainerDarkHighContrast = Color(0xFF9CCCC7)
internal val onTertiaryContainerDarkHighContrast = Color(0xFF000E0D)
internal val errorDarkHighContrast = Color(0xFFFFECE9)
internal val onErrorDarkHighContrast = Color(0xFF000000)
internal val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
internal val onErrorContainerDarkHighContrast = Color(0xFF220001)
internal val backgroundDarkHighContrast = Color(0xFF12140E)
internal val onBackgroundDarkHighContrast = Color(0xFFE2E3D8)
internal val surfaceDarkHighContrast = Color(0xFF12140E)
internal val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
internal val surfaceVariantDarkHighContrast = Color(0xFF44483D)
internal val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
internal val outlineDarkHighContrast = Color(0xFFEEF2E2)
internal val outlineVariantDarkHighContrast = Color(0xFFC1C4B6)
internal val scrimDarkHighContrast = Color(0xFF000000)
internal val inverseSurfaceDarkHighContrast = Color(0xFFE2E3D8)
internal val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
internal val inversePrimaryDarkHighContrast = Color(0xFF364F17)
internal val surfaceDimDarkHighContrast = Color(0xFF12140E)
internal val surfaceBrightDarkHighContrast = Color(0xFF4F5149)
internal val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
internal val surfaceContainerLowDarkHighContrast = Color(0xFF1E201A)
internal val surfaceContainerDarkHighContrast = Color(0xFF2F312A)
internal val surfaceContainerHighDarkHighContrast = Color(0xFF3A3C35)
internal val surfaceContainerHighestDarkHighContrast = Color(0xFF454840)

internal val LightColorScheme =
  lightColorScheme(
    primary = primaryLight,
    onPrimary = onPrimaryLight,
    primaryContainer = primaryContainerLight,
    onPrimaryContainer = onPrimaryContainerLight,
    secondary = secondaryLight,
    onSecondary = onSecondaryLight,
    secondaryContainer = secondaryContainerLight,
    onSecondaryContainer = onSecondaryContainerLight,
    tertiary = tertiaryLight,
    onTertiary = onTertiaryLight,
    tertiaryContainer = tertiaryContainerLight,
    onTertiaryContainer = onTertiaryContainerLight,
    error = errorLight,
    onError = onErrorLight,
    errorContainer = errorContainerLight,
    onErrorContainer = onErrorContainerLight,
    background = backgroundLight,
    onBackground = onBackgroundLight,
    surface = surfaceLight,
    onSurface = onSurfaceLight,
    surfaceVariant = surfaceVariantLight,
    onSurfaceVariant = onSurfaceVariantLight,
    outline = outlineLight,
    outlineVariant = outlineVariantLight,
    scrim = scrimLight,
    inverseSurface = inverseSurfaceLight,
    inverseOnSurface = inverseOnSurfaceLight,
    inversePrimary = inversePrimaryLight,
    surfaceDim = surfaceDimLight,
    surfaceBright = surfaceBrightLight,
    surfaceContainerLowest = surfaceContainerLowestLight,
    surfaceContainerLow = surfaceContainerLowLight,
    surfaceContainer = surfaceContainerLight,
    surfaceContainerHigh = surfaceContainerHighLight,
    surfaceContainerHighest = surfaceContainerHighestLight,
  )

internal val DarkColorScheme =
  darkColorScheme(
    primary = primaryDark,
    onPrimary = onPrimaryDark,
    primaryContainer = primaryContainerDark,
    onPrimaryContainer = onPrimaryContainerDark,
    secondary = secondaryDark,
    onSecondary = onSecondaryDark,
    secondaryContainer = secondaryContainerDark,
    onSecondaryContainer = onSecondaryContainerDark,
    tertiary = tertiaryDark,
    onTertiary = onTertiaryDark,
    tertiaryContainer = tertiaryContainerDark,
    onTertiaryContainer = onTertiaryContainerDark,
    error = errorDark,
    onError = onErrorDark,
    errorContainer = errorContainerDark,
    onErrorContainer = onErrorContainerDark,
    background = backgroundDark,
    onBackground = onBackgroundDark,
    surface = surfaceDark,
    onSurface = onSurfaceDark,
    surfaceVariant = surfaceVariantDark,
    onSurfaceVariant = onSurfaceVariantDark,
    outline = outlineDark,
    outlineVariant = outlineVariantDark,
    scrim = scrimDark,
    inverseSurface = inverseSurfaceDark,
    inverseOnSurface = inverseOnSurfaceDark,
    inversePrimary = inversePrimaryDark,
    surfaceDim = surfaceDimDark,
    surfaceBright = surfaceBrightDark,
    surfaceContainerLowest = surfaceContainerLowestDark,
    surfaceContainerLow = surfaceContainerLowDark,
    surfaceContainer = surfaceContainerDark,
    surfaceContainerHigh = surfaceContainerHighDark,
    surfaceContainerHighest = surfaceContainerHighestDark,
  )

internal val MediumContrastLightColorScheme =
  lightColorScheme(
    primary = primaryLightMediumContrast,
    onPrimary = onPrimaryLightMediumContrast,
    primaryContainer = primaryContainerLightMediumContrast,
    onPrimaryContainer = onPrimaryContainerLightMediumContrast,
    secondary = secondaryLightMediumContrast,
    onSecondary = onSecondaryLightMediumContrast,
    secondaryContainer = secondaryContainerLightMediumContrast,
    onSecondaryContainer = onSecondaryContainerLightMediumContrast,
    tertiary = tertiaryLightMediumContrast,
    onTertiary = onTertiaryLightMediumContrast,
    tertiaryContainer = tertiaryContainerLightMediumContrast,
    onTertiaryContainer = onTertiaryContainerLightMediumContrast,
    error = errorLightMediumContrast,
    onError = onErrorLightMediumContrast,
    errorContainer = errorContainerLightMediumContrast,
    onErrorContainer = onErrorContainerLightMediumContrast,
    background = backgroundLightMediumContrast,
    onBackground = onBackgroundLightMediumContrast,
    surface = surfaceLightMediumContrast,
    onSurface = onSurfaceLightMediumContrast,
    surfaceVariant = surfaceVariantLightMediumContrast,
    onSurfaceVariant = onSurfaceVariantLightMediumContrast,
    outline = outlineLightMediumContrast,
    outlineVariant = outlineVariantLightMediumContrast,
    scrim = scrimLightMediumContrast,
    inverseSurface = inverseSurfaceLightMediumContrast,
    inverseOnSurface = inverseOnSurfaceLightMediumContrast,
    inversePrimary = inversePrimaryLightMediumContrast,
    surfaceDim = surfaceDimLightMediumContrast,
    surfaceBright = surfaceBrightLightMediumContrast,
    surfaceContainerLowest = surfaceContainerLowestLightMediumContrast,
    surfaceContainerLow = surfaceContainerLowLightMediumContrast,
    surfaceContainer = surfaceContainerLightMediumContrast,
    surfaceContainerHigh = surfaceContainerHighLightMediumContrast,
    surfaceContainerHighest = surfaceContainerHighestLightMediumContrast,
  )

internal val HighContrastLightColorScheme =
  lightColorScheme(
    primary = primaryLightHighContrast,
    onPrimary = onPrimaryLightHighContrast,
    primaryContainer = primaryContainerLightHighContrast,
    onPrimaryContainer = onPrimaryContainerLightHighContrast,
    secondary = secondaryLightHighContrast,
    onSecondary = onSecondaryLightHighContrast,
    secondaryContainer = secondaryContainerLightHighContrast,
    onSecondaryContainer = onSecondaryContainerLightHighContrast,
    tertiary = tertiaryLightHighContrast,
    onTertiary = onTertiaryLightHighContrast,
    tertiaryContainer = tertiaryContainerLightHighContrast,
    onTertiaryContainer = onTertiaryContainerLightHighContrast,
    error = errorLightHighContrast,
    onError = onErrorLightHighContrast,
    errorContainer = errorContainerLightHighContrast,
    onErrorContainer = onErrorContainerLightHighContrast,
    background = backgroundLightHighContrast,
    onBackground = onBackgroundLightHighContrast,
    surface = surfaceLightHighContrast,
    onSurface = onSurfaceLightHighContrast,
    surfaceVariant = surfaceVariantLightHighContrast,
    onSurfaceVariant = onSurfaceVariantLightHighContrast,
    outline = outlineLightHighContrast,
    outlineVariant = outlineVariantLightHighContrast,
    scrim = scrimLightHighContrast,
    inverseSurface = inverseSurfaceLightHighContrast,
    inverseOnSurface = inverseOnSurfaceLightHighContrast,
    inversePrimary = inversePrimaryLightHighContrast,
    surfaceDim = surfaceDimLightHighContrast,
    surfaceBright = surfaceBrightLightHighContrast,
    surfaceContainerLowest = surfaceContainerLowestLightHighContrast,
    surfaceContainerLow = surfaceContainerLowLightHighContrast,
    surfaceContainer = surfaceContainerLightHighContrast,
    surfaceContainerHigh = surfaceContainerHighLightHighContrast,
    surfaceContainerHighest = surfaceContainerHighestLightHighContrast,
  )

internal val MediumContrastDarkColorScheme =
  darkColorScheme(
    primary = primaryDarkMediumContrast,
    onPrimary = onPrimaryDarkMediumContrast,
    primaryContainer = primaryContainerDarkMediumContrast,
    onPrimaryContainer = onPrimaryContainerDarkMediumContrast,
    secondary = secondaryDarkMediumContrast,
    onSecondary = onSecondaryDarkMediumContrast,
    secondaryContainer = secondaryContainerDarkMediumContrast,
    onSecondaryContainer = onSecondaryContainerDarkMediumContrast,
    tertiary = tertiaryDarkMediumContrast,
    onTertiary = onTertiaryDarkMediumContrast,
    tertiaryContainer = tertiaryContainerDarkMediumContrast,
    onTertiaryContainer = onTertiaryContainerDarkMediumContrast,
    error = errorDarkMediumContrast,
    onError = onErrorDarkMediumContrast,
    errorContainer = errorContainerDarkMediumContrast,
    onErrorContainer = onErrorContainerDarkMediumContrast,
    background = backgroundDarkMediumContrast,
    onBackground = onBackgroundDarkMediumContrast,
    surface = surfaceDarkMediumContrast,
    onSurface = onSurfaceDarkMediumContrast,
    surfaceVariant = surfaceVariantDarkMediumContrast,
    onSurfaceVariant = onSurfaceVariantDarkMediumContrast,
    outline = outlineDarkMediumContrast,
    outlineVariant = outlineVariantDarkMediumContrast,
    scrim = scrimDarkMediumContrast,
    inverseSurface = inverseSurfaceDarkMediumContrast,
    inverseOnSurface = inverseOnSurfaceDarkMediumContrast,
    inversePrimary = inversePrimaryDarkMediumContrast,
    surfaceDim = surfaceDimDarkMediumContrast,
    surfaceBright = surfaceBrightDarkMediumContrast,
    surfaceContainerLowest = surfaceContainerLowestDarkMediumContrast,
    surfaceContainerLow = surfaceContainerLowDarkMediumContrast,
    surfaceContainer = surfaceContainerDarkMediumContrast,
    surfaceContainerHigh = surfaceContainerHighDarkMediumContrast,
    surfaceContainerHighest = surfaceContainerHighestDarkMediumContrast,
  )

internal val HighContrastDarkColorScheme =
  darkColorScheme(
    primary = primaryDarkHighContrast,
    onPrimary = onPrimaryDarkHighContrast,
    primaryContainer = primaryContainerDarkHighContrast,
    onPrimaryContainer = onPrimaryContainerDarkHighContrast,
    secondary = secondaryDarkHighContrast,
    onSecondary = onSecondaryDarkHighContrast,
    secondaryContainer = secondaryContainerDarkHighContrast,
    onSecondaryContainer = onSecondaryContainerDarkHighContrast,
    tertiary = tertiaryDarkHighContrast,
    onTertiary = onTertiaryDarkHighContrast,
    tertiaryContainer = tertiaryContainerDarkHighContrast,
    onTertiaryContainer = onTertiaryContainerDarkHighContrast,
    error = errorDarkHighContrast,
    onError = onErrorDarkHighContrast,
    errorContainer = errorContainerDarkHighContrast,
    onErrorContainer = onErrorContainerDarkHighContrast,
    background = backgroundDarkHighContrast,
    onBackground = onBackgroundDarkHighContrast,
    surface = surfaceDarkHighContrast,
    onSurface = onSurfaceDarkHighContrast,
    surfaceVariant = surfaceVariantDarkHighContrast,
    onSurfaceVariant = onSurfaceVariantDarkHighContrast,
    outline = outlineDarkHighContrast,
    outlineVariant = outlineVariantDarkHighContrast,
    scrim = scrimDarkHighContrast,
    inverseSurface = inverseSurfaceDarkHighContrast,
    inverseOnSurface = inverseOnSurfaceDarkHighContrast,
    inversePrimary = inversePrimaryDarkHighContrast,
    surfaceDim = surfaceDimDarkHighContrast,
    surfaceBright = surfaceBrightDarkHighContrast,
    surfaceContainerLowest = surfaceContainerLowestDarkHighContrast,
    surfaceContainerLow = surfaceContainerLowDarkHighContrast,
    surfaceContainer = surfaceContainerDarkHighContrast,
    surfaceContainerHigh = surfaceContainerHighDarkHighContrast,
    surfaceContainerHighest = surfaceContainerHighestDarkHighContrast,
  )
